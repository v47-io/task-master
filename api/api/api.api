public abstract interface class io/v47/taskMaster/SuspendableTask : io/v47/taskMaster/Task {
	public abstract fun resume (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun suspend (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/v47/taskMaster/Task {
	public abstract fun run (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/v47/taskMaster/TaskFactory {
	public abstract fun create ()Lio/v47/taskMaster/Task;
}

public abstract interface class io/v47/taskMaster/TaskHandle : horus/events/EventEmitter {
	public abstract fun getError ()Ljava/lang/Throwable;
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getInput ()Ljava/lang/Object;
	public abstract fun getOutput ()Ljava/lang/Object;
	public abstract fun getState ()Lio/v47/taskMaster/TaskState;
	public abstract fun getSuspendable ()Z
	public abstract fun getType ()Ljava/lang/Class;
}

public abstract interface class io/v47/taskMaster/TaskMaster : horus/events/EventEmitter {
	public static final field Companion Lio/v47/taskMaster/TaskMaster$Companion;
	public abstract fun add (Lio/v47/taskMaster/TaskFactory;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun kill (Lio/v47/taskMaster/TaskHandle;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun resume (Lio/v47/taskMaster/TaskHandle;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/v47/taskMaster/TaskMaster$Companion {
	public final fun invoke (IILkotlin/coroutines/CoroutineContext;)Lio/v47/taskMaster/TaskMaster;
	public static synthetic fun invoke$default (Lio/v47/taskMaster/TaskMaster$Companion;IILkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lio/v47/taskMaster/TaskMaster;
}

public final class io/v47/taskMaster/TaskMaster$DefaultImpls {
	public static synthetic fun add$default (Lio/v47/taskMaster/TaskMaster;Lio/v47/taskMaster/TaskFactory;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/v47/taskMaster/TaskPriority {
	public static final field HIGH I
	public static final field INSTANCE Lio/v47/taskMaster/TaskPriority;
	public static final field LOW I
	public static final field NORMAL I
}

public final class io/v47/taskMaster/TaskState : java/lang/Enum {
	public static final field Complete Lio/v47/taskMaster/TaskState;
	public static final field Failed Lio/v47/taskMaster/TaskState;
	public static final field Running Lio/v47/taskMaster/TaskState;
	public static final field Suspended Lio/v47/taskMaster/TaskState;
	public static final field Waiting Lio/v47/taskMaster/TaskState;
	public static fun valueOf (Ljava/lang/String;)Lio/v47/taskMaster/TaskState;
	public static fun values ()[Lio/v47/taskMaster/TaskState;
}

public abstract class io/v47/taskMaster/events/TaskHandleEvent {
}

public final class io/v47/taskMaster/events/TaskHandleEvent$Completed : io/v47/taskMaster/events/TaskHandleEvent {
	public static final field Companion Lio/v47/taskMaster/events/TaskHandleEvent$Completed$Companion;
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lio/v47/taskMaster/events/TaskHandleEvent$Completed;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskHandleEvent$Completed;Ljava/lang/Object;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskHandleEvent$Completed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOutput ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskHandleEvent$Completed$Companion : horus/events/EventKey {
}

public final class io/v47/taskMaster/events/TaskHandleEvent$Failed : io/v47/taskMaster/events/TaskHandleEvent {
	public static final field Companion Lio/v47/taskMaster/events/TaskHandleEvent$Failed$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Throwable;
	public final fun copy (Ljava/lang/Throwable;)Lio/v47/taskMaster/events/TaskHandleEvent$Failed;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskHandleEvent$Failed;Ljava/lang/Throwable;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskHandleEvent$Failed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskHandleEvent$Failed$Companion : horus/events/EventKey {
}

public final class io/v47/taskMaster/events/TaskHandleEvent$StateChanged : io/v47/taskMaster/events/TaskHandleEvent {
	public static final field Companion Lio/v47/taskMaster/events/TaskHandleEvent$StateChanged$Companion;
	public fun <init> (Lio/v47/taskMaster/TaskState;)V
	public final fun component1 ()Lio/v47/taskMaster/TaskState;
	public final fun copy (Lio/v47/taskMaster/TaskState;)Lio/v47/taskMaster/events/TaskHandleEvent$StateChanged;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskHandleEvent$StateChanged;Lio/v47/taskMaster/TaskState;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskHandleEvent$StateChanged;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getState ()Lio/v47/taskMaster/TaskState;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskHandleEvent$StateChanged$Companion : horus/events/EventKey {
}

public abstract class io/v47/taskMaster/events/TaskMasterEvent {
	public abstract fun getTaskHandle ()Lio/v47/taskMaster/TaskHandle;
}

public final class io/v47/taskMaster/events/TaskMasterEvent$TaskAdded : io/v47/taskMaster/events/TaskMasterEvent {
	public fun <init> (Lio/v47/taskMaster/TaskHandle;)V
	public final fun component1 ()Lio/v47/taskMaster/TaskHandle;
	public final fun copy (Lio/v47/taskMaster/TaskHandle;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskAdded;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskMasterEvent$TaskAdded;Lio/v47/taskMaster/TaskHandle;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskAdded;
	public fun equals (Ljava/lang/Object;)Z
	public fun getTaskHandle ()Lio/v47/taskMaster/TaskHandle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskMasterEvent$TaskCompleted : io/v47/taskMaster/events/TaskMasterEvent {
	public fun <init> (Lio/v47/taskMaster/TaskHandle;)V
	public final fun component1 ()Lio/v47/taskMaster/TaskHandle;
	public final fun copy (Lio/v47/taskMaster/TaskHandle;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskCompleted;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskMasterEvent$TaskCompleted;Lio/v47/taskMaster/TaskHandle;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskCompleted;
	public fun equals (Ljava/lang/Object;)Z
	public fun getTaskHandle ()Lio/v47/taskMaster/TaskHandle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskMasterEvent$TaskFailed : io/v47/taskMaster/events/TaskMasterEvent {
	public fun <init> (Lio/v47/taskMaster/TaskHandle;)V
	public final fun component1 ()Lio/v47/taskMaster/TaskHandle;
	public final fun copy (Lio/v47/taskMaster/TaskHandle;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskFailed;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskMasterEvent$TaskFailed;Lio/v47/taskMaster/TaskHandle;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskFailed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getTaskHandle ()Lio/v47/taskMaster/TaskHandle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskMasterEvent$TaskRunning : io/v47/taskMaster/events/TaskMasterEvent {
	public fun <init> (Lio/v47/taskMaster/TaskHandle;)V
	public final fun component1 ()Lio/v47/taskMaster/TaskHandle;
	public final fun copy (Lio/v47/taskMaster/TaskHandle;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskRunning;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskMasterEvent$TaskRunning;Lio/v47/taskMaster/TaskHandle;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskRunning;
	public fun equals (Ljava/lang/Object;)Z
	public fun getTaskHandle ()Lio/v47/taskMaster/TaskHandle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/v47/taskMaster/events/TaskMasterEvent$TaskSuspended : io/v47/taskMaster/events/TaskMasterEvent {
	public fun <init> (Lio/v47/taskMaster/TaskHandle;)V
	public final fun component1 ()Lio/v47/taskMaster/TaskHandle;
	public final fun copy (Lio/v47/taskMaster/TaskHandle;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskSuspended;
	public static synthetic fun copy$default (Lio/v47/taskMaster/events/TaskMasterEvent$TaskSuspended;Lio/v47/taskMaster/TaskHandle;ILjava/lang/Object;)Lio/v47/taskMaster/events/TaskMasterEvent$TaskSuspended;
	public fun equals (Ljava/lang/Object;)Z
	public fun getTaskHandle ()Lio/v47/taskMaster/TaskHandle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/v47/taskMaster/spi/TaskMasterProvider {
	public abstract fun create (IILkotlin/coroutines/CoroutineContext;)Lio/v47/taskMaster/TaskMaster;
}

public final class io/v47/taskMaster/spi/TaskMasterProvider$DefaultImpls {
	public static synthetic fun create$default (Lio/v47/taskMaster/spi/TaskMasterProvider;IILkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lio/v47/taskMaster/TaskMaster;
}

